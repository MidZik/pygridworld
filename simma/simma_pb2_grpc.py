# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from simma import simma_pb2 as simma_dot_simma__pb2


class SimmaStub(object):
    """python -m grpc_tools.protoc -I protos --python_out=. --grpc_python_out=. ./protos/simma/simma.proto

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTimelines = channel.unary_unary(
                '/simma.Simma/GetTimelines',
                request_serializer=simma_dot_simma__pb2.TimelinesRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.TimelinesResponse.FromString,
                )
        self.GetTimelineTicks = channel.unary_unary(
                '/simma.Simma/GetTimelineTicks',
                request_serializer=simma_dot_simma__pb2.TimelineTicksRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.TimelineTicksResponse.FromString,
                )
        self.GetTimelineData = channel.unary_stream(
                '/simma.Simma/GetTimelineData',
                request_serializer=simma_dot_simma__pb2.TimelineDataRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.TimelineDataResponse.FromString,
                )
        self.GetTimelineJson = channel.unary_stream(
                '/simma.Simma/GetTimelineJson',
                request_serializer=simma_dot_simma__pb2.TimelineJsonRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.TimelineJsonResponse.FromString,
                )
        self.GetTimelineEvents = channel.unary_stream(
                '/simma.Simma/GetTimelineEvents',
                request_serializer=simma_dot_simma__pb2.TimelineEventsRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.TimelineEventsResponse.FromString,
                )
        self.TimelineSimulator = channel.stream_stream(
                '/simma.Simma/TimelineSimulator',
                request_serializer=simma_dot_simma__pb2.TimelineSimulatorRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.TimelineSimulatorResponse.FromString,
                )
        self.TimelineCreator = channel.stream_stream(
                '/simma.Simma/TimelineCreator',
                request_serializer=simma_dot_simma__pb2.TimelineCreatorRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.TimelineCreatorResponse.FromString,
                )
        self.ModifyTimelineTags = channel.unary_unary(
                '/simma.Simma/ModifyTimelineTags',
                request_serializer=simma_dot_simma__pb2.ModifyTimelineTagsRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.ModifyTimelineTagsResponse.FromString,
                )
        self.DeleteTimeline = channel.unary_unary(
                '/simma.Simma/DeleteTimeline',
                request_serializer=simma_dot_simma__pb2.DeleteTimelineRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.DeleteTimelineResponse.FromString,
                )
        self.GetTimelineDetails = channel.unary_unary(
                '/simma.Simma/GetTimelineDetails',
                request_serializer=simma_dot_simma__pb2.GetTimelineDetailsRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.GetTimelineDetailsResponse.FromString,
                )
        self.UploadPackedSimbin = channel.stream_unary(
                '/simma.Simma/UploadPackedSimbin',
                request_serializer=simma_dot_simma__pb2.UploadPackedSimbinRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.UploadPackedSimbinResponse.FromString,
                )
        self.GetBinaryDetails = channel.unary_stream(
                '/simma.Simma/GetBinaryDetails',
                request_serializer=simma_dot_simma__pb2.GetBinaryDetailsRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.GetBinaryDetailsResponse.FromString,
                )
        self.GetBinaryDescription = channel.unary_unary(
                '/simma.Simma/GetBinaryDescription',
                request_serializer=simma_dot_simma__pb2.GetBinaryDescriptionRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.GetBinaryDescriptionResponse.FromString,
                )
        self.SetBinaryDescription = channel.unary_unary(
                '/simma.Simma/SetBinaryDescription',
                request_serializer=simma_dot_simma__pb2.SetBinaryDescriptionRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.SetBinaryDescriptionResponse.FromString,
                )
        self.DeleteBinary = channel.unary_unary(
                '/simma.Simma/DeleteBinary',
                request_serializer=simma_dot_simma__pb2.DeleteBinaryRequest.SerializeToString,
                response_deserializer=simma_dot_simma__pb2.DeleteBinaryResponse.FromString,
                )


class SimmaServicer(object):
    """python -m grpc_tools.protoc -I protos --python_out=. --grpc_python_out=. ./protos/simma/simma.proto

    """

    def GetTimelines(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimelineTicks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimelineData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimelineJson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimelineEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TimelineSimulator(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TimelineCreator(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModifyTimelineTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTimeline(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTimelineDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadPackedSimbin(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBinaryDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBinaryDescription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBinaryDescription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBinary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SimmaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTimelines': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimelines,
                    request_deserializer=simma_dot_simma__pb2.TimelinesRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.TimelinesResponse.SerializeToString,
            ),
            'GetTimelineTicks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimelineTicks,
                    request_deserializer=simma_dot_simma__pb2.TimelineTicksRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.TimelineTicksResponse.SerializeToString,
            ),
            'GetTimelineData': grpc.unary_stream_rpc_method_handler(
                    servicer.GetTimelineData,
                    request_deserializer=simma_dot_simma__pb2.TimelineDataRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.TimelineDataResponse.SerializeToString,
            ),
            'GetTimelineJson': grpc.unary_stream_rpc_method_handler(
                    servicer.GetTimelineJson,
                    request_deserializer=simma_dot_simma__pb2.TimelineJsonRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.TimelineJsonResponse.SerializeToString,
            ),
            'GetTimelineEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.GetTimelineEvents,
                    request_deserializer=simma_dot_simma__pb2.TimelineEventsRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.TimelineEventsResponse.SerializeToString,
            ),
            'TimelineSimulator': grpc.stream_stream_rpc_method_handler(
                    servicer.TimelineSimulator,
                    request_deserializer=simma_dot_simma__pb2.TimelineSimulatorRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.TimelineSimulatorResponse.SerializeToString,
            ),
            'TimelineCreator': grpc.stream_stream_rpc_method_handler(
                    servicer.TimelineCreator,
                    request_deserializer=simma_dot_simma__pb2.TimelineCreatorRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.TimelineCreatorResponse.SerializeToString,
            ),
            'ModifyTimelineTags': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyTimelineTags,
                    request_deserializer=simma_dot_simma__pb2.ModifyTimelineTagsRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.ModifyTimelineTagsResponse.SerializeToString,
            ),
            'DeleteTimeline': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTimeline,
                    request_deserializer=simma_dot_simma__pb2.DeleteTimelineRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.DeleteTimelineResponse.SerializeToString,
            ),
            'GetTimelineDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTimelineDetails,
                    request_deserializer=simma_dot_simma__pb2.GetTimelineDetailsRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.GetTimelineDetailsResponse.SerializeToString,
            ),
            'UploadPackedSimbin': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadPackedSimbin,
                    request_deserializer=simma_dot_simma__pb2.UploadPackedSimbinRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.UploadPackedSimbinResponse.SerializeToString,
            ),
            'GetBinaryDetails': grpc.unary_stream_rpc_method_handler(
                    servicer.GetBinaryDetails,
                    request_deserializer=simma_dot_simma__pb2.GetBinaryDetailsRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.GetBinaryDetailsResponse.SerializeToString,
            ),
            'GetBinaryDescription': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBinaryDescription,
                    request_deserializer=simma_dot_simma__pb2.GetBinaryDescriptionRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.GetBinaryDescriptionResponse.SerializeToString,
            ),
            'SetBinaryDescription': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBinaryDescription,
                    request_deserializer=simma_dot_simma__pb2.SetBinaryDescriptionRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.SetBinaryDescriptionResponse.SerializeToString,
            ),
            'DeleteBinary': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBinary,
                    request_deserializer=simma_dot_simma__pb2.DeleteBinaryRequest.FromString,
                    response_serializer=simma_dot_simma__pb2.DeleteBinaryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'simma.Simma', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Simma(object):
    """python -m grpc_tools.protoc -I protos --python_out=. --grpc_python_out=. ./protos/simma/simma.proto

    """

    @staticmethod
    def GetTimelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/simma.Simma/GetTimelines',
            simma_dot_simma__pb2.TimelinesRequest.SerializeToString,
            simma_dot_simma__pb2.TimelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimelineTicks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/simma.Simma/GetTimelineTicks',
            simma_dot_simma__pb2.TimelineTicksRequest.SerializeToString,
            simma_dot_simma__pb2.TimelineTicksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimelineData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/simma.Simma/GetTimelineData',
            simma_dot_simma__pb2.TimelineDataRequest.SerializeToString,
            simma_dot_simma__pb2.TimelineDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimelineJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/simma.Simma/GetTimelineJson',
            simma_dot_simma__pb2.TimelineJsonRequest.SerializeToString,
            simma_dot_simma__pb2.TimelineJsonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimelineEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/simma.Simma/GetTimelineEvents',
            simma_dot_simma__pb2.TimelineEventsRequest.SerializeToString,
            simma_dot_simma__pb2.TimelineEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TimelineSimulator(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/simma.Simma/TimelineSimulator',
            simma_dot_simma__pb2.TimelineSimulatorRequest.SerializeToString,
            simma_dot_simma__pb2.TimelineSimulatorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TimelineCreator(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/simma.Simma/TimelineCreator',
            simma_dot_simma__pb2.TimelineCreatorRequest.SerializeToString,
            simma_dot_simma__pb2.TimelineCreatorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ModifyTimelineTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/simma.Simma/ModifyTimelineTags',
            simma_dot_simma__pb2.ModifyTimelineTagsRequest.SerializeToString,
            simma_dot_simma__pb2.ModifyTimelineTagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTimeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/simma.Simma/DeleteTimeline',
            simma_dot_simma__pb2.DeleteTimelineRequest.SerializeToString,
            simma_dot_simma__pb2.DeleteTimelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTimelineDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/simma.Simma/GetTimelineDetails',
            simma_dot_simma__pb2.GetTimelineDetailsRequest.SerializeToString,
            simma_dot_simma__pb2.GetTimelineDetailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadPackedSimbin(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/simma.Simma/UploadPackedSimbin',
            simma_dot_simma__pb2.UploadPackedSimbinRequest.SerializeToString,
            simma_dot_simma__pb2.UploadPackedSimbinResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBinaryDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/simma.Simma/GetBinaryDetails',
            simma_dot_simma__pb2.GetBinaryDetailsRequest.SerializeToString,
            simma_dot_simma__pb2.GetBinaryDetailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBinaryDescription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/simma.Simma/GetBinaryDescription',
            simma_dot_simma__pb2.GetBinaryDescriptionRequest.SerializeToString,
            simma_dot_simma__pb2.GetBinaryDescriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetBinaryDescription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/simma.Simma/SetBinaryDescription',
            simma_dot_simma__pb2.SetBinaryDescriptionRequest.SerializeToString,
            simma_dot_simma__pb2.SetBinaryDescriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteBinary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/simma.Simma/DeleteBinary',
            simma_dot_simma__pb2.DeleteBinaryRequest.SerializeToString,
            simma_dot_simma__pb2.DeleteBinaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

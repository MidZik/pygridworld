syntax = "proto3";

package simma;

// python -m grpc_tools.protoc -I protos --python_out=. --grpc_python_out=. ./protos/simma/simma.proto

service Simma {
    rpc GetTimelines (TimelinesRequest) returns (TimelinesResponse) {}
    rpc GetTimelineTicks (TimelineTicksRequest) returns (TimelineTicksResponse) {}
    rpc GetTimelineData (TimelineDataRequest) returns (stream TimelineDataResponse) {}
    rpc GetTimelineJson (TimelineJsonRequest) returns (stream TimelineJsonResponse) {}
    rpc GetTimelineEvents (TimelineEventsRequest) returns (stream TimelineEventsResponse) {}
    rpc ModifyTimelineTags(ModifyTimelineTagsRequest) returns (ModifyTimelineTagsResponse) {}
    rpc DeleteTimeline (DeleteTimelineRequest) returns (DeleteTimelineResponse) {}
    rpc GetTimelineDetails (GetTimelineDetailsRequest) returns (GetTimelineDetailsResponse) {}
    rpc UploadPackedSimbin (stream UploadPackedSimbinRequest) returns (UploadPackedSimbinResponse) {}
    rpc GetBinaryDetails (GetBinaryDetailsRequest) returns (stream GetBinaryDetailsResponse) {}
    rpc GetBinaryDescription (GetBinaryDescriptionRequest) returns (GetBinaryDescriptionResponse) {}
    rpc SetBinaryDescription (SetBinaryDescriptionRequest) returns (SetBinaryDescriptionResponse) {}
    rpc DeleteBinary (DeleteBinaryRequest) returns (DeleteBinaryResponse) {}
    rpc DownloadBinary (DownloadBinaryRequest) returns (stream DownloadBinaryResponse);

    // The following RPCs are intended for use by trusted simulation runners.
    rpc UploadResults (stream UploadResultsRequest) returns (stream UploadResultsResponse);
    rpc SaveToNewTimeline (stream SaveToNewTimelineRequest) returns (SaveToNewTimelineResponse);
}

message TickList {
    repeated uint64 ticks = 1;
}

message TickRange {
    optional uint64 start_tick = 1;
    optional uint64 end_tick = 2;
}

message SimEvent {
    string name = 1;
    string json = 2;
}

message SimEventChunk {
    uint64 tick = 1;
    bool last_chunk = 2;
    repeated SimEvent chunk = 3;
}

message PointChunk {
    uint64 tick = 1;
    bool last_chunk = 2;
    bytes chunk = 3;
}

message TimelinesRequest {
    repeated string filter_parent_ids = 1;
    repeated string require_tags = 2;
    repeated string disallow_tags = 3;
}

message TimelinesResponse {
    repeated string timeline_ids = 1;
}

message TimelineTicksRequest {
    string timeline_id = 1;
}

message TimelineTicksResponse {
    TickList tick_list = 1;
}

message TimelineDataRequest {
    string timeline_id = 1;
    oneof tick_option {
        TickList tick_list = 2;
        TickRange tick_range = 3;
    }
}

message TimelineDataResponse {
    repeated PointChunk chunks = 1;
}

message TimelineJsonRequest {
    string timeline_id = 1;
    oneof tick_option {
        TickList tick_list = 2;
        TickRange tick_range = 3;
    }
}

message TimelineJsonResponse {
    message JsonChunk {
        uint64 tick = 1;
        bool last_chunk = 2;
        string chunk = 3;
    }

    repeated JsonChunk chunks = 1;
}

message TimelineEventsRequest {
    string timeline_id = 1;
    TickRange tick_range = 2;
    repeated string event_name_filters = 3;
}


message TimelineEventsResponse {
    string timeline_id = 1;
    uint64 tick = 2;
    repeated SimEvent events = 3;
}

message ModifyTimelineTagsRequest {
    string timeline_id = 1;
    repeated string tags_to_add = 2;
    repeated string tags_to_remove = 3;
}

message ModifyTimelineTagsResponse {

}

message DeleteTimelineRequest {
    int32 timeline_id = 1;
}

message DeleteTimelineResponse {

}

message GetTimelineDetailsRequest {
    string timeline_id = 1;
}

message GetTimelineDetailsResponse {
    string binary_id = 1;
    string parent_id = 2;
    uint64 head_tick = 3;
    string creation_timestamp = 4;
    repeated string tags = 5;
}

message UploadPackedSimbinRequest {
    bool last_chunk = 1;
    bytes data_chunk = 2;
}

message UploadPackedSimbinResponse {
    string binary_id = 1;
}

message GetBinaryDetailsRequest {
    string binary_id = 1;
}

message GetBinaryDetailsResponse {
    string binary_id = 1;
    string name = 2;
    string creation_timestamp =  3;
    string description_head = 4;
}

message GetBinaryDescriptionRequest {
    string binary_id = 1;
}

message GetBinaryDescriptionResponse {
    string description = 1;
}

message SetBinaryDescriptionRequest {
    string binary_id = 1;
    string description = 2;
}

message SetBinaryDescriptionResponse {
}

message DeleteBinaryRequest {
    string binary_id = 1;
}

message DeleteBinaryResponse {
}

message DownloadBinaryRequest {
    string binary_id = 1;
}

message DownloadBinaryResponse {
    oneof message {
        string entry_file = 1;
        bytes zip_chunk = 2;
    }
}

message UploadResultsRequest {
    message RequestDetails {
        TickRange event_ticks = 1;
        repeated uint64 point_ticks = 2;
    }

    message Chunks {
        repeated SimEventChunk sim_event_chunks = 1;
        repeated PointChunk point_chunks = 2;
    }

    oneof message {
        RequestDetails request = 1;
        Chunks chunks = 2;
    }
}

message UploadResultsResponse {
    message ResponseDetails {
        TickRange accept_event_ticks = 1;
        repeated uint64 accept_point_ticks = 2;
    }

    oneof message {
        ResponseDetails response = 1;
    }
}

message SaveToNewTimelineRequest {
    message ParentInfo {
        string parent_timeline_id = 1;
        uint64 parent_tick = 2;
    }

    oneof message {
        ParentInfo parent_info = 1;
        PointChunk point_chunk = 2;
    }
}

message SaveToNewTimelineResponse {
    string new_timeline_id = 1;
}
